# -*- coding: utf-8 -*-
"""Group_Activity_2_py.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f2mbVPR7Ek-OcHzX_Gp7PCujik4jW-CA

## **Group 6 Activty #2 (CSS145)**
### Group Members:
  - Besario, Adrian B.
  - Benito, Keane Kurt
  - Labao, Joaquin Anton C.
  - Limpiada, Erin Brent P.
  - Papa, Rishon Simone V.

### **Dataset: Laptop Price Dataset**
"""

!pip install streamlit
import streamlit as st

uploaded_file = st.file_uploader("Choose a file")
if uploaded_file is not None:
    # Process the uploaded file
    st.write("File uploaded successfully!")

"""#### **Importing Python Libraries**"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
import altair as alt
import seaborn as sns

df = pd.read_csv('laptop_price - dataset.csv')


print(df.head())

"""#### **Dataset Description:**"""

df = pd.read_csv("laptop_price - dataset.csv")

df #Shows the Full Dataset:

df.info() #Shows all columns within the data set and its corressponding Data Type:

df.isna().sum() #Shows all null values in the data set:

df.describe()  #Shows the statistical summary of the data set:

print("\nCounts of categorical values in 'Company':")
print(df['Company'].value_counts())

"""3D Surface Plot and Line Graph
#### **Created by: Besario, Adrian B.**

**3D SURFACE PLOT**

The 3D surface plot or graph displays a more complicated picture by including three variables: RAM, screen size, and pricing. The x-axis represents RAM while the y-axis shows screen size, and the z-axis represents the respective laptop pricing. This chart illustrates the way changes in RAM and screen size affect the price, generating a multidimensional surface.



---



Peaks in the diagram show the most expensive configurations, which often include huge RAM and screen sizes, whilst troughs indicate the least expensive combinations. The surface's curvature aids in identifying portions of the specification space where costs rise more sharply, offering a better understanding of how numerous factors combine to determine laptop prices.
**bold text**
"""

def surface_plot(df):
    x = df['RAM (GB)']
    y = df['Inches']
    z = df['Price (Euro)']

    X, Y = np.meshgrid(np.unique(x), np.unique(y))

    Z = np.zeros_like(X, dtype=float)
    for i, xi in enumerate(np.unique(x)):
        for j, yj in enumerate(np.unique(y)):
            filtered_data = z[(x == xi) & (y == yj)]
            if not filtered_data.empty:
                Z[j, i] = filtered_data.values[0]
            else:
                Z[j, i] = np.nan

    fig = plt.figure()
    ax = fig.add_subplot(111, projection='3d')

    surf = ax.plot_surface(X, Y, Z, cmap='viridis')

    ax.set_xlabel('RAM (GB)')
    ax.set_ylabel('Screen Size (Inches)')
    ax.set_zlabel('Price (Euro)')

    plt.title('3D Surface Plot of RAM, Screen Size, and Price')

    plt.show()

surface_plot(df)

"""**LINE CHART**

The line chart is one of the basic but effective techniques for visualizing the relationship and the correlation between two variables, in this example laptop pricing and RAM. By displaying RAM (x-axis) against laptop prices (y-axis), the graphic efficiently demonstrates how increases in RAM affect laptop costs.



---


The line neatly connects the data points, making it easy to identify trends such as if more RAM leads to greater pricing. Observing the slope of the line can reveal information about pricing sensitivity; for example, a high rise indicates that even a minor increase in RAM size can dramatically raise the laptop price.
"""

def line_chart():
    # Group by Company and calculate average screen size
    company_inch = df.groupby('Company')['Inches'].mean().reset_index()

    # Sort companies alphabetically
    company_inch = company_inch.sort_values(by='Company')

    # Create the line chart
    companies = company_inch['Company']
    inch_values = company_inch['Inches']

    plt.plot(companies, inch_values, marker='o', linestyle='-', color='pink')
    plt.title('Average Screen Size by Company')
    plt.xlabel('Company')
    plt.ylabel('Average Screen Size (Inches)')
    plt.xticks(rotation=90)
    plt.show()

line_chart()

"""### **Pie and Scatter Plot Graph**
#### **Created By: Papa, Rishon Simone V.**
"""

print("\nShowing Laptops Developed by different Companies:")
print(df['Company'].value_counts())

def pie_chart(df):
    maximum = 21
    grouped_companies = []
    grouped_counts = []

    values = df.groupby('Company')['Company'].count()
    others_count = 0

    for company, count in zip(values.index, values):
        if count > maximum:
            grouped_companies.append(company)
            grouped_counts.append(count)
        else:
            others_count += count

    if others_count > 0:
        grouped_companies.append('Others')
        grouped_counts.append(others_count)

    colors = ['skyblue', 'lightgreen', 'salmon', 'orange', 'darkkhaki', 'violet', 'gold', 'cyan', 'pink', 'lightgray']

    plt.pie(grouped_counts, labels=grouped_companies, autopct='%1.1f%%', colors=colors[:len(grouped_companies)])
    plt.title('Laptops Developed by Comapanies')
    plt.axis('equal')
    plt.show()

pie_chart(df)

"""#### **Observations**
##### After analyzing the data and then visualizing it using the pie graph, we are able to observe that most laptops in the figure are developed by the company Dell with 22.8 % Laptops manufactured and following that is Lenovo and 22.7 %. The following companies are HP, Asus, MSI while the other brands who have a lower percentage like Apple, Chuwi, and LG are grouped in the Others section with 5.6 % laptops developed.This graph accurately represents how the large companies like Dell, HP, and Lenovo has a huge amount of shares in the Laptop Dataset.
"""

print("\nShowing the Laptop's Prices according to their Storage Capacity:")
memory_price = df.groupby('Memory')['Price (Euro)'].mean().reset_index()
print(memory_price)

def scatter_plot():

  x = df['Memory'].head(20)
  y = df['Price (Euro)'].head(20)

  plt.figure(figsize=(12, 4))
  plt.scatter(x, y, color='purple')
  plt.title('Memory x Price Relationship')
  plt.xlabel('Memory')
  plt.ylabel('Price (Euro)')
  plt.show()

scatter_plot()

"""#### **Observations**
##### After analyzing the data of columns "Memory" and "Prices (Euro)", we are then able to discover that they have a relationsip with each other which is then portrayed using a scatter plot graph. In this graph we are able to analyze that having a large storage capacity can drastically change the price of the laptop and it's specifications play a big part in it's performance as well as it's stock price.

### **Bar Chart - Average Laptop Price by Company**
#### **Created by: Joaquin Anton C. Labao**
"""

company_avg_price = df.groupby('Company')['Price (Euro)'].mean()
print(company_avg_price)

def bar_chart_2():
    company_avg_price.plot(kind = 'bar', figsize = (12, 4), color = ['#33FF57', '#FF5733', '#FFC300', '#FF33A1', '#3357FF', '#FF5733', '#33FF57', '#8E44AD', '#F39C12', '#E74C3C', '#1ABC9C', '#3498DB', '#9B59B6', '#34495E', '#2ECC71', '#E67E22', '#F1C40F', '#16A085'])

    plt.title('Average Laptop Price by Company')
    plt.xlabel('Company')
    plt.ylabel('Average Price (Euro)')
    plt.xticks(rotation = 45)

bar_chart_2()

"""**Explanation**

This bar graph shows the average prices of laptops in Euros from different companies. Each of the average prices from these companies' laptops is calculated based on all of their laptop prices. It includes the companies' lowest prices to their highest laptop prices.

**Observations**



*   Razer has the most expensive average laptop price at around 3300 Euros.
*   LG has the second most expensive average laptop price with an average of 2100 Euros
*   Razer, LG, MSI, Google, Microsoft, and Apple target the high-end market since their average laptop prices are above 1500 Euros.


*   Huawei, Samsung, Toshiba, Dell, Xiaomi, Asus, Lenovo, and HP target the mid-range market since they have average laptop prices between 1500 and 1000 Euros.


*   Vero has the most cheapest average laptop price at around 200 Euros.
*   Mediacrom and Chuwi have the second most cheapest average laptop prices with an average of around 300 Euros.
*   Fujitsu, Acer, Chuwi, Mediacrom, and Vero target the low-end market since their average laptop prices are well below 1000 Euros.

### **Stacked Bar Chart - Number of Laptops and Distribution of CPU Brands by Company**
#### **Created by: Joaquin Anton C. Labao**
"""

cpu_brand_distribution = df.groupby(['Company', 'CPU_Company']).size().unstack().fillna(0)
print(cpu_brand_distribution)

def stacked_bar_chart():
    cpu_brand_distribution.plot(kind = 'bar', stacked = True, figsize = (12, 4), color = ['#ED1C24', '#00C7FD', '#1428A0'])

    plt.title('Number of Laptops and Distribution of CPU Brands by Company')
    plt.xlabel('Company')
    plt.ylabel('Number of Laptops')
    plt.xticks(rotation = 45)
    plt.legend(title = 'CPU Company')

stacked_bar_chart()

"""**Explanation**

This stacked bar graph shows the number of laptops and their distribution of CPU brands across the different laptop companies. It is calculated by how much of these laptops from each company run with which CPU brand.

**Observations**
*   Intel CPUs are the most used across almost all companies, with a total of 1,200 Intel-based laptops.
*   AMD CPUs are used by fewer companies and in smaller numbers compared to Intel.
*   Acer, Asus, Lenovo, and HP are the only companies in the given dataset that feature AMD CPUs.
*   Only Samsung uses its own brand of CPUs, with just one laptop featuring a Samsung CPU.
*   Dell has the highest number of Intel-based laptops, with 291 units.
*   Apple, Chuwi, Dell, Fujitsu, Google, Huawei, LG, MSI, Mediacom, Microsoft, Razer, Toshiba, Vero, and Xiaomi only use Intel CPUs for their laptops.

**Box Plot & Bar Graph
Created By Keane Benito**
"""

plt.figure(figsize=(8, 6))
sns.boxplot(data=df['Company'])  # Replace with the correct column name

# Adding titles and labels
plt.title('Box Plot Example from DataFrame')
plt.xlabel('Data Points')

# Show the plot
plt.show()

"""**Observation**

The box plot is an effective visualization tool for illustrating the distribution of laptop prices across various categories. The following are the key insights derived from the plot:

Median Price: The median, denoted by the line inside the box, serves as a representation of the central tendency of laptop prices, indicating the typical price within the dataset.

Interquartile Range (IQR): The box, covering the 25th to the 75th percentile, displays the range within which the middle 50% of laptop prices are situated. A smaller IQR implies less price variation, while a larger IQR suggests more significant price variability.

Outliers: Data points located outside the box plot's whiskers indicate outliers, representing laptops priced significantly higher or lower than the majority. These outliers may signify high-end or budget models that deviate from the norm.

Skewness: Should the box plot exhibit skewness (one whisker longer than the other), it indicates an asymmetric distribution of prices. A longer upper whisker suggests the presence of a few costly laptops, skewing the distribution upwards.

Consistency Across Brands (if applicable): When the box plot compares prices across different brands, it allows for observing variations in price distribution between brands. Certain brands may consistently feature higher median prices, while others exhibit more affordable or variable pricing.

Overall Interpretation:
The box plot provides valuable insights into pricing trends within the laptop market. The existence of outliers suggests the presence of extreme values, likely representing premium or entry-level models. The interquartile range and median aid in understanding general pricing trends, while skewness in distribution offers clues about the prevalence of mid-range pricing or a significant proportion of high-end products.

**Bar Graph**
"""

# Group the data by 'Company' and 'RAM (GB)', and calculate the average price for each combination
price_data = df.groupby(['Company', 'RAM (GB)'])['Price (Euro)'].mean().unstack()

# Create the bar plot
price_data.plot(kind='bar', figsize=(10, 6))

# Add labels and title
plt.title('Average Laptop Prices by Company and RAM')
plt.xlabel('Company')
plt.ylabel('Average Price (Euro)')
plt.legend(title='RAM (GB)', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()

# Show the plot
plt.show()

"""**Violin Plot & Area Chart created by Erin Brent Limpiada**"""

df.columns = df.columns.str.replace(' (Euro)', '', regex=False)

sampled_data = df.sample(n=300, random_state=1)
top_brands = df['Company'].value_counts().nlargest(5).index
filtered_data = df[df['Company'].isin(top_brands)]

def violin_plot():

  plt.figure(figsize=(12, 6))
  sns.violinplot(x='Price', y='CPU_Company', data=df, palette='pastel')
  plt.title('Laptop Price Ranges by CPU Manufacturers')
  plt.xlabel('Price')
  plt.ylabel('CPU Company')
  plt.show()

violin_plot()

"""The violin plot is a hydrid combination between the Box Plot and the Kernel Density Plot. The violin plot depicts distribution of numerical data's like the ones in the given data set and displays them as curves. In this Violin graph, we can observe the price ranges of the laptops with respect to which cpu manufacturer is supplying."""

def area_chart(df):

    Price = df['Price']
    trend = df['GPU_Company']

    chart_df = pd.DataFrame({'Price': Price, 'GPU_Company': trend})
    area_chart = alt.Chart(chart_df).mark_area(opacity=0.5).encode(
        x='Price',
        y='GPU_Company'
    ).properties(title='GPU Company Price Trend')
    area_chart.display()

area_chart(df)

"""The area chart is a combination of the line chart and bar chart in how it shows the numerical values and data along with the trend between one or more groups, in this case being the price trend of each GPU manufacturer. Using an area chart, we can see the trend in prices between the competing GPU companies. From here we can observe which companies trend to occupy the more expensive market and which companies trend lower.

**CONCLUSION**

---

In conclusion, across all visualizations—including line, 3D surface, pie, bar, violin, box, and scatter plots—the data consistently supports the concept that "The better the specs, the higher the price." The line and 3D surface plots reveal a clear trend where laptops with higher RAM and larger screen sizes are priced higher. In addition with that, utilizing pie graph and scatter plot, we are able to portray the distribution and shares between the laptops of different companies and disclose that higher storage capacities can play a big part in increasing the laptop's specification, as well as its stock price. The box plot provides insights into laptop pricing trends. Outliers indicate extreme values, possibly representing premium or entry-level models. The interquartile range and median help understand general pricing trends, while distribution skewness gives clues about the predominant pricing range. The bar graph further emphasizes two key insights: a majority of all laptops in the dataset are equipped with Intel CPUs, showcasing Intel's dominance in the market with AMD coming in second, and Razer has the most expensive average laptop price, indicating that their products target a high-performance, premium market segment. This aligns with the overall theme that better specs drive up prices, as Razer laptops are typically packed with high-end specifications.
"""